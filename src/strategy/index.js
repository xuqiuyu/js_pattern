/**
 * ------------------------------------------------------------------
 * 策略模式
 * 概念: 定义一些列算法，把它们封装起来，并且让它们之间可以相互替换。
 * PS:个人理解,策略模式大约是将一个较大的逻辑处理程序按照变化与不变两部分做拆分,然后再将不变的部分按照单一原则分解封装成一个个独立的算法单元,供变化的主体逻辑动态调用。
 * 在优化一些复杂的 if/else switch/case 分支逻辑时可以考虑使用策略模式完成, 常用的表单校验型算法也可以考虑封装成独立的算法单元。
 * 
 *  一个完成的策略模式实现一般包含两个部分的实现。
 * 1、根据实际问题场景抽象封装的一个不变的算法集合。
 * 2、变化的主线程序动态调用封装好的算法单元。
 * ------------------------------------------------------------------
 */

 /**
  * ------------------------------------------------------------------
  * 1、封装一个不变的算法集合
  * ------------------------------------------------------------------
  */
 var strategies = {
    add: function(param1, param2){
        return param1 + param2;
    },
    plus: function(param1, param2){
        return param1 * param2;
    }
    // ...
 }

 /**
  * ------------------------------------------------------------------
  * 2、动态调用集合中的算法单元
  * ------------------------------------------------------------------
  */
 var program = function(strategyName, param1, param2){
    var _tragetStrategy = strategies[strategyName];
    if(typeof _tragetStrategy !== 'function') throw new Error('can not reconize strategyName : ' + strategyName);
    _tragetStrategy(param1,param2);
 }